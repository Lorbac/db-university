1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

SELECT students.name, students.surname, degrees.name
FROM degrees
INNER JOIN students ON degrees.id = students.degree_id
WHERE degrees.name = "Corso di Laurea in Economia"

2. Selezionare tutti i Corsi di Laurea del Dipartimento di Neuroscienze

SELECT degrees.name AS nome_corso, departments.name AS dipartimento
FROM departments
INNER JOIN degrees ON departments.id = degrees.department_id
WHERE departments.name = "Dipartimento di Neuroscienze"

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

SELECT courses.name AS nome_corso, teacher_id
FROM courses
INNER JOIN course_teacher ON courses.id = course_teacher.course_id
WHERE teacher_id = 44

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il
relativo dipartimento, in ordine alfabetico per cognome e nome

SELECT students.*, degrees.name AS corso_di_laurea, departments.name AS dipartimento
FROM departments
INNER JOIN degrees ON departments.id = degrees.department_id
INNER JOIN students ON degrees.id = students.degree_id
ORDER BY students.surname ASC

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

SELECT teachers.name, teachers.surname, degrees.name AS corsi_laurea, courses.name AS corsi
FROM degrees
INNER JOIN courses ON degrees.id = courses.degree_id
INNER JOIN course_teacher ON courses.id = course_teacher.course_id
INNER JOIN teachers ON course_teacher.teacher_id = teachers.id  
ORDER BY corsi_laurea ASC

6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)

SELECT DISTINCT teachers.name, teachers.surname, departments.name
FROM departments
INNER JOIN degrees ON departments.id = degrees.department_id
INNER JOIN courses ON degrees.id = courses.degree_id
INNER JOIN course_teacher ON courses.id = course_teacher.course_id
INNER JOIN teachers ON course_teacher.teacher_id = teachers.id
WHERE departments.name = "Dipartimento di Matematica"  
/* GROUP BY teacher_id */


7. BONUS: Selezionare per ogni studente quanti tentativi dâ€™esame ha sostenuto per
superare ciascuno dei suoi esami

SELECT  students.id as id_studente, students.name, students.surname, COUNT(courses.name) AS nome_corso, courses.id as id_corso, MAX(exam_student. vote) AS voto_max
FROM courses
INNER JOIN exams ON courses.id = exams.course_id
INNER JOIN exam_student ON exams.id = exam_student.exam_id
INNER JOIN students ON exam_student.student_id = students.id
GROUP BY courses.id, courses.name, students.id
HAVING MAX(exam_student.vote) >= 18
ORDER BY id_studene ASC

